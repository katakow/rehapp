{"ast":null,"code":"var _jsxFileName = \"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/LoginMenu.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { NavItem, NavLink } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"./AuthorizeService\";\nimport { ApplicationPaths } from \"./ApiAuthorizationConstants\";\nexport class LoginMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false,\n      userName: null\n    };\n  }\n\n  componentDidMount() {\n    this._subscription = authService.subscribe(() => this.populateState());\n    this.populateState();\n  }\n\n  componentWillUnmount() {\n    authService.unsubscribe(this._subscription);\n  }\n\n  async populateState() {\n    const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()]);\n    this.setState({\n      isAuthenticated,\n      userName: user && user.name\n    });\n  }\n\n  render() {\n    const {\n      isAuthenticated,\n      userName\n    } = this.state;\n\n    if (!isAuthenticated) {\n      const registerPath = `${ApplicationPaths.Register}`;\n      const loginPath = `${ApplicationPaths.Login}`;\n      return this.anonymousView(registerPath, loginPath);\n    } else {\n      const profilePath = `${ApplicationPaths.Profile}`;\n      const logoutPath = {\n        pathname: `${ApplicationPaths.LogOut}`,\n        state: {\n          local: true\n        }\n      };\n      return this.authenticatedView(userName, profilePath, logoutPath);\n    }\n  }\n\n  authenticatedView(userName, profilePath, logoutPath) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: profilePath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Hello \", userName)), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: logoutPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, \"Logout\")));\n  }\n\n  anonymousView(registerPath, loginPath) {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: registerPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Register\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      tag: Link,\n      className: \"text-dark\",\n      to: loginPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Login\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/LoginMenu.jsx"],"names":["React","Component","Fragment","NavItem","NavLink","Link","authService","ApplicationPaths","LoginMenu","constructor","props","state","isAuthenticated","userName","componentDidMount","_subscription","subscribe","populateState","componentWillUnmount","unsubscribe","user","Promise","all","getUser","setState","name","render","registerPath","Register","loginPath","Login","anonymousView","profilePath","Profile","logoutPath","pathname","LogOut","local","authenticatedView"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { NavItem, NavLink } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport authService from \"./AuthorizeService\";\nimport { ApplicationPaths } from \"./ApiAuthorizationConstants\";\n\nexport class LoginMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isAuthenticated: false,\n      userName: null,\n    };\n  }\n\n  componentDidMount() {\n    this._subscription = authService.subscribe(() => this.populateState());\n    this.populateState();\n  }\n\n  componentWillUnmount() {\n    authService.unsubscribe(this._subscription);\n  }\n\n  async populateState() {\n    const [isAuthenticated, user] = await Promise.all([\n      authService.isAuthenticated(),\n      authService.getUser(),\n    ]);\n    this.setState({\n      isAuthenticated,\n      userName: user && user.name,\n    });\n  }\n\n  render() {\n    const { isAuthenticated, userName } = this.state;\n    if (!isAuthenticated) {\n      const registerPath = `${ApplicationPaths.Register}`;\n      const loginPath = `${ApplicationPaths.Login}`;\n      return this.anonymousView(registerPath, loginPath);\n    } else {\n      const profilePath = `${ApplicationPaths.Profile}`;\n      const logoutPath = {\n        pathname: `${ApplicationPaths.LogOut}`,\n        state: { local: true },\n      };\n      return this.authenticatedView(userName, profilePath, logoutPath);\n    }\n  }\n\n  authenticatedView(userName, profilePath, logoutPath) {\n    return (\n      <Fragment>\n        <NavItem>\n          <NavLink tag={Link} className=\"text-dark\" to={profilePath}>\n            Hello {userName}\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink tag={Link} className=\"text-dark\" to={logoutPath}>\n            Logout\n          </NavLink>\n        </NavItem>\n      </Fragment>\n    );\n  }\n\n  anonymousView(registerPath, loginPath) {\n    return (\n      <Fragment>\n        <NavItem>\n          <NavLink tag={Link} className=\"text-dark\" to={registerPath}>\n            Register\n          </NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink tag={Link} className=\"text-dark\" to={loginPath}>\n            Login\n          </NavLink>\n        </NavItem>\n      </Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}