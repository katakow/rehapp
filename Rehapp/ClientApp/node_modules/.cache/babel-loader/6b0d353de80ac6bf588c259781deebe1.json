{"ast":null,"code":"var _jsxFileName = \"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/AuthorizeRoute.jsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { ApplicationPaths, QueryParameterNames } from \"./ApiAuthorizationConstants\";\nimport authService from \"./AuthorizeService\";\nimport { PropTypes } from \"prop-types\";\nexport default class AuthorizeRoute extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready: false,\n      authenticated: false\n    };\n  }\n\n  componentDidMount() {\n    this._subscription = authService.subscribe(() => this.authenticationChanged());\n    this.populateAuthenticationState();\n  }\n\n  componentWillUnmount() {\n    authService.unsubscribe(this._subscription);\n  }\n\n  render() {\n    const {\n      ready,\n      authenticated\n    } = this.state;\n    var link = document.createElement(\"a\");\n    link.href = this.props.path;\n    const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\n    const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURIComponent(returnUrl)}`;\n\n    if (!ready) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      });\n    } else {\n      const {\n        component: Component,\n        ...rest\n      } = this.props;\n      return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n        render: props => {\n          if (authenticated) {\n            return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 22\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(Redirect, {\n              to: redirectUrl,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 22\n              }\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  async populateAuthenticationState() {\n    const authenticated = await authService.isAuthenticated();\n    this.setState({\n      ready: true,\n      authenticated\n    });\n  }\n\n  async authenticationChanged() {\n    this.setState({\n      ready: false,\n      authenticated: false\n    });\n    await this.populateAuthenticationState();\n  }\n\n}\nAuthorizeRoute.propTypes = {\n  path: PropTypes.any,\n  component: PropTypes.any\n};","map":{"version":3,"sources":["/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/AuthorizeRoute.jsx"],"names":["React","Component","Route","Redirect","ApplicationPaths","QueryParameterNames","authService","PropTypes","AuthorizeRoute","constructor","props","state","ready","authenticated","componentDidMount","_subscription","subscribe","authenticationChanged","populateAuthenticationState","componentWillUnmount","unsubscribe","render","link","document","createElement","href","path","returnUrl","protocol","host","pathname","search","hash","redirectUrl","Login","ReturnUrl","encodeURIComponent","component","rest","isAuthenticated","setState","propTypes","any"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SACEC,gBADF,EAEEC,mBAFF,QAGO,6BAHP;AAIA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,eAAe,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AACpDQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KADI;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AAODC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,aAAL,GAAqBT,WAAW,CAACU,SAAZ,CAAsB,MACzC,KAAKC,qBAAL,EADmB,CAArB;AAGA,SAAKC,2BAAL;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBb,IAAAA,WAAW,CAACc,WAAZ,CAAwB,KAAKL,aAA7B;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAA2B,KAAKF,KAAtC;AACA,QAAIW,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAX;AACAF,IAAAA,IAAI,CAACG,IAAL,GAAY,KAAKf,KAAL,CAAWgB,IAAvB;AACA,UAAMC,SAAS,GAAI,GAAEL,IAAI,CAACM,QAAS,KAAIN,IAAI,CAACO,IAAK,GAAEP,IAAI,CAACQ,QAAS,GAAER,IAAI,CAACS,MAAO,GAAET,IAAI,CAACU,IAAK,EAA3F;AACA,UAAMC,WAAW,GAAI,GAAE7B,gBAAgB,CAAC8B,KAAM,IAC5C7B,mBAAmB,CAAC8B,SACrB,IAAGC,kBAAkB,CAACT,SAAD,CAAY,EAFlC;;AAGA,QAAI,CAACf,KAAL,EAAY;AACV,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL,YAAM;AAAEyB,QAAAA,SAAS,EAAEpC,SAAb;AAAwB,WAAGqC;AAA3B,UAAoC,KAAK5B,KAA/C;AACA,0BACE,oBAAC,KAAD,oBACM4B,IADN;AAEE,QAAA,MAAM,EAAG5B,KAAD,IAAW;AACjB,cAAIG,aAAJ,EAAmB;AACjB,gCAAO,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,WAFD,MAEO;AACL,gCAAO,oBAAC,QAAD;AAAU,cAAA,EAAE,EAAEuB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,SARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAYD;AACF;;AAEgC,QAA3Bf,2BAA2B,GAAG;AAClC,UAAML,aAAa,GAAG,MAAMP,WAAW,CAACiC,eAAZ,EAA5B;AACA,SAAKC,QAAL,CAAc;AAAE5B,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA;AAAf,KAAd;AACD;;AAE0B,QAArBI,qBAAqB,GAAG;AAC5B,SAAKuB,QAAL,CAAc;AAAE5B,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,aAAa,EAAE;AAA/B,KAAd;AACA,UAAM,KAAKK,2BAAL,EAAN;AACD;;AA7DmD;AAAjCV,c,CAUZiC,S,GAAY;AACjBf,EAAAA,IAAI,EAAEnB,SAAS,CAACmC,GADC;AAEjBL,EAAAA,SAAS,EAAE9B,SAAS,CAACmC;AAFJ,C","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport {\n  ApplicationPaths,\n  QueryParameterNames,\n} from \"./ApiAuthorizationConstants\";\nimport authService from \"./AuthorizeService\";\nimport { PropTypes } from \"prop-types\";\n\nexport default class AuthorizeRoute extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ready: false,\n      authenticated: false,\n    };\n  }\n\n  static propTypes = {\n    path: PropTypes.any,\n    component: PropTypes.any,\n  };\n\n  componentDidMount() {\n    this._subscription = authService.subscribe(() =>\n      this.authenticationChanged()\n    );\n    this.populateAuthenticationState();\n  }\n\n  componentWillUnmount() {\n    authService.unsubscribe(this._subscription);\n  }\n\n  render() {\n    const { ready, authenticated } = this.state;\n    var link = document.createElement(\"a\");\n    link.href = this.props.path;\n    const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\n    const redirectUrl = `${ApplicationPaths.Login}?${\n      QueryParameterNames.ReturnUrl\n    }=${encodeURIComponent(returnUrl)}`;\n    if (!ready) {\n      return <div></div>;\n    } else {\n      const { component: Component, ...rest } = this.props;\n      return (\n        <Route\n          {...rest}\n          render={(props) => {\n            if (authenticated) {\n              return <Component {...props} />;\n            } else {\n              return <Redirect to={redirectUrl} />;\n            }\n          }}\n        />\n      );\n    }\n  }\n\n  async populateAuthenticationState() {\n    const authenticated = await authService.isAuthenticated();\n    this.setState({ ready: true, authenticated });\n  }\n\n  async authenticationChanged() {\n    this.setState({ ready: false, authenticated: false });\n    await this.populateAuthenticationState();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}