[{"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/index.jsx":"1","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/App.jsx":"2","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/Layout.jsx":"3","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/FetchData.jsx":"4","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/Counter.jsx":"5","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/ApiAuthorizationRoutes.jsx":"6","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/Home.jsx":"7","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/AuthorizeRoute.jsx":"8","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/ApiAuthorizationConstants.jsx":"9","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/AuthorizeService.jsx":"10","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/NavMenu.jsx":"11","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/Login.jsx":"12","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/Logout.jsx":"13","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/LoginMenu.jsx":"14"},{"size":902,"mtime":1637175244000,"results":"15","hashOfConfig":"16"},{"size":1003,"mtime":1637175256000,"results":"17","hashOfConfig":"16"},{"size":432,"mtime":1637175436000,"results":"18","hashOfConfig":"16"},{"size":1696,"mtime":1637175270000,"results":"19","hashOfConfig":"16"},{"size":785,"mtime":1637692482116,"results":"20","hashOfConfig":"16"},{"size":1600,"mtime":1637175282000,"results":"21","hashOfConfig":"16"},{"size":2113,"mtime":1637175268000,"results":"22","hashOfConfig":"16"},{"size":1878,"mtime":1637175514000,"results":"23","hashOfConfig":"16"},{"size":1155,"mtime":1637175284000,"results":"24","hashOfConfig":"16"},{"size":7188,"mtime":1637175278000,"results":"25","hashOfConfig":"16"},{"size":1901,"mtime":1637175314000,"results":"26","hashOfConfig":"16"},{"size":4956,"mtime":1637175548000,"results":"27","hashOfConfig":"16"},{"size":4549,"mtime":1637175440000,"results":"28","hashOfConfig":"16"},{"size":2230,"mtime":1637175274000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hqorxr",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/index.jsx",[],[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/App.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/Layout.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/FetchData.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/Counter.jsx",["60"],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/ApiAuthorizationRoutes.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/Home.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/AuthorizeRoute.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/ApiAuthorizationConstants.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/AuthorizeService.jsx",["61","62","63","64","65","66","67"],"import { UserManager, WebStorageStateStore } from \"oidc-client\";\nimport { ApplicationPaths, ApplicationName } from \"./ApiAuthorizationConstants\";\n\nexport class AuthorizeService {\n  _callbacks = [];\n  _nextSubscriptionId = 0;\n  _user = null;\n  _isAuthenticated = false;\n\n  // By default pop ups are disabled because they don't work properly on Edge.\n  // If you want to enable pop up authentication simply set this flag to false.\n  _popUpDisabled = true;\n\n  async isAuthenticated() {\n    const user = await this.getUser();\n    return !!user;\n  }\n\n  async getUser() {\n    if (this._user && this._user.profile) {\n      return this._user.profile;\n    }\n\n    await this.ensureUserManagerInitialized();\n    const user = await this.userManager.getUser();\n    return user && user.profile;\n  }\n\n  async getAccessToken() {\n    await this.ensureUserManagerInitialized();\n    const user = await this.userManager.getUser();\n    return user && user.access_token;\n  }\n\n  // We try to authenticate the user in three different ways:\n  // 1) We try to see if we can authenticate the user silently. This happens\n  //    when the user is already logged in on the IdP and is done using a hidden iframe\n  //    on the client.\n  // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\n  //    Pop-Up blocker or the user has disabled PopUps.\n  // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\n  //    redirect flow.\n  async signIn(state) {\n    await this.ensureUserManagerInitialized();\n    try {\n      const silentUser = await this.userManager.signinSilent(\n        this.createArguments()\n      );\n      this.updateState(silentUser);\n      return this.success(state);\n    } catch (silentError) {\n      // User might not be authenticated, fallback to popup authentication\n      console.log(\"Silent authentication error: \", silentError);\n\n      try {\n        if (this._popUpDisabled) {\n          throw new Error(\n            \"Popup disabled. Change 'AuthorizeService.js:AuthorizeService._popupDisabled' to false to enable it.\"\n          );\n        }\n\n        const popUpUser = await this.userManager.signinPopup(\n          this.createArguments()\n        );\n        this.updateState(popUpUser);\n        return this.success(state);\n      } catch (popUpError) {\n        if (popUpError.message === \"Popup window closed\") {\n          // The user explicitly cancelled the login action by closing an opened popup.\n          return this.error(\"The user closed the window.\");\n        } else if (!this._popUpDisabled) {\n          console.log(\"Popup authentication error: \", popUpError);\n        }\n\n        // PopUps might be blocked by the user, fallback to redirect\n        try {\n          await this.userManager.signinRedirect(this.createArguments(state));\n          return this.redirect();\n        } catch (redirectError) {\n          console.log(\"Redirect authentication error: \", redirectError);\n          return this.error(redirectError);\n        }\n      }\n    }\n  }\n\n  async completeSignIn(url) {\n    try {\n      await this.ensureUserManagerInitialized();\n      const user = await this.userManager.signinCallback(url);\n      this.updateState(user);\n      return this.success(user && user.state);\n    } catch (error) {\n      console.log(\"There was an error signing in: \", error);\n      return this.error(\"There was an error signing in.\");\n    }\n  }\n\n  // We try to sign out the user in two different ways:\n  // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\n  //    Pop-Up blocker or the user has disabled PopUps.\n  // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\n  //    post logout redirect flow.\n  async signOut(state) {\n    await this.ensureUserManagerInitialized();\n    try {\n      if (this._popUpDisabled) {\n        throw new Error(\n          \"Popup disabled. Change 'AuthorizeService.js:AuthorizeService._popupDisabled' to false to enable it.\"\n        );\n      }\n\n      await this.userManager.signoutPopup(this.createArguments());\n      this.updateState(undefined);\n      return this.success(state);\n    } catch (popupSignOutError) {\n      console.log(\"Popup signout error: \", popupSignOutError);\n      try {\n        await this.userManager.signoutRedirect(this.createArguments(state));\n        return this.redirect();\n      } catch (redirectSignOutError) {\n        console.log(\"Redirect signout error: \", redirectSignOutError);\n        return this.error(redirectSignOutError);\n      }\n    }\n  }\n\n  async completeSignOut(url) {\n    await this.ensureUserManagerInitialized();\n    try {\n      const response = await this.userManager.signoutCallback(url);\n      this.updateState(null);\n      return this.success(response && response.data);\n    } catch (error) {\n      console.log(`There was an error trying to log out '${error}'.`);\n      return this.error(error);\n    }\n  }\n\n  updateState(user) {\n    this._user = user;\n    this._isAuthenticated = !!this._user;\n    this.notifySubscribers();\n  }\n\n  subscribe(callback) {\n    this._callbacks.push({\n      callback,\n      subscription: this._nextSubscriptionId++,\n    });\n    return this._nextSubscriptionId - 1;\n  }\n\n  unsubscribe(subscriptionId) {\n    const subscriptionIndex = this._callbacks\n      .map((element, index) =>\n        element.subscription === subscriptionId\n          ? { found: true, index }\n          : { found: false }\n      )\n      .filter((element) => element.found === true);\n    if (subscriptionIndex.length !== 1) {\n      throw new Error(\n        `Found an invalid number of subscriptions ${subscriptionIndex.length}`\n      );\n    }\n\n    this._callbacks.splice(subscriptionIndex[0].index, 1);\n  }\n\n  notifySubscribers() {\n    for (let i = 0; i < this._callbacks.length; i++) {\n      const callback = this._callbacks[i].callback;\n      callback();\n    }\n  }\n\n  createArguments(state) {\n    return { useReplaceToNavigate: true, data: state };\n  }\n\n  error(message) {\n    return { status: AuthenticationResultStatus.Fail, message };\n  }\n\n  success(state) {\n    return { status: AuthenticationResultStatus.Success, state };\n  }\n\n  redirect() {\n    return { status: AuthenticationResultStatus.Redirect };\n  }\n\n  async ensureUserManagerInitialized() {\n    if (this.userManager !== undefined) {\n      return;\n    }\n\n    let response = await fetch(\n      ApplicationPaths.ApiAuthorizationClientConfigurationUrl\n    );\n    if (!response.ok) {\n      throw new Error(`Could not load settings for '${ApplicationName}'`);\n    }\n\n    let settings = await response.json();\n    settings.automaticSilentRenew = true;\n    settings.includeIdTokenInSilentRenew = true;\n    settings.userStore = new WebStorageStateStore({\n      prefix: ApplicationName,\n    });\n\n    this.userManager = new UserManager(settings);\n\n    this.userManager.events.addUserSignedOut(async () => {\n      await this.userManager.removeUser();\n      this.updateState(undefined);\n    });\n  }\n\n  static get instance() {\n    return authService;\n  }\n}\n\nconst authService = new AuthorizeService();\n\nexport default authService;\n\nexport const AuthenticationResultStatus = {\n  Redirect: \"redirect\",\n  Success: \"success\",\n  Fail: \"fail\",\n};\n","/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/NavMenu.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/Login.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/Logout.jsx",[],"/Users/kasia/Desktop/repo/rehapp/Rehapp/ClientApp/src/components/api-authorization/LoginMenu.jsx",[],{"ruleId":"68","severity":2,"message":"69","line":5,"column":1,"nodeType":null,"messageId":"70","endLine":6,"endColumn":1,"fix":"71"},{"ruleId":"72","severity":1,"message":"73","line":53,"column":7,"nodeType":"74","messageId":"75","endLine":53,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":72,"column":11,"nodeType":"74","messageId":"75","endLine":72,"endColumn":22},{"ruleId":"72","severity":1,"message":"73","line":80,"column":11,"nodeType":"74","messageId":"75","endLine":80,"endColumn":22},{"ruleId":"72","severity":1,"message":"73","line":94,"column":7,"nodeType":"74","messageId":"75","endLine":94,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":117,"column":7,"nodeType":"74","messageId":"75","endLine":117,"endColumn":18},{"ruleId":"72","severity":1,"message":"73","line":122,"column":9,"nodeType":"74","messageId":"75","endLine":122,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":135,"column":7,"nodeType":"74","messageId":"75","endLine":135,"endColumn":18},"prettier/prettier","Delete `··⏎`","delete",{"range":"76","text":"77"},"no-console","Unexpected console statement.","MemberExpression","unexpected",[121,124],""]